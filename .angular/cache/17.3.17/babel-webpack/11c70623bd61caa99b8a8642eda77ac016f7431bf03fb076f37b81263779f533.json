{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nlet CampaignFormComponent = class CampaignFormComponent {\n  constructor(formBuilder, router, campaignService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.campaignService = campaignService;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.campaignForm = this.formBuilder.group({\n      name: [\"\", Validators.required],\n      subject: [\"\", Validators.required],\n      senderName: [\"Good Mail Team\", Validators.required],\n      senderEmail: [\"team@goodmail.io\", [Validators.required, Validators.email]],\n      replyToEmail: [\"support@goodmail.io\", Validators.email],\n      campaignType: [\"regular\"],\n      template: [\"\"],\n      content: [\"\", Validators.required],\n      recipientList: [\"\", Validators.required],\n      segment: [\"\"],\n      sendTime: [\"now\"],\n      scheduleDate: [\"\"],\n      scheduleTime: [\"\"],\n      timezone: [\"UTC\"]\n    });\n    // Add conditional validation for scheduled sending\n    this.campaignForm.get(\"sendTime\")?.valueChanges.subscribe(value => {\n      const scheduleDateControl = this.campaignForm.get(\"scheduleDate\");\n      const scheduleTimeControl = this.campaignForm.get(\"scheduleTime\");\n      if (value === \"scheduled\") {\n        scheduleDateControl?.setValidators(Validators.required);\n        scheduleTimeControl?.setValidators(Validators.required);\n      } else {\n        scheduleDateControl?.clearValidators();\n        scheduleTimeControl?.clearValidators();\n      }\n      scheduleDateControl?.updateValueAndValidity();\n      scheduleTimeControl?.updateValueAndValidity();\n    });\n  }\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.campaignForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // Stop here if form is invalid\n    if (this.campaignForm.invalid) {\n      return;\n    }\n    const campaignData = this.campaignForm.value;\n    if (campaignData.sendTime === \"now\") {\n      this.campaignService.sendCampaign(campaignData).subscribe({\n        next: () => {\n          alert(\"Campaign sent successfully!\");\n          this.router.navigate([\"/dashboard\"]);\n        },\n        error: error => {\n          console.error(\"Error sending campaign:\", error);\n          alert(\"Failed to send campaign. Please try again.\");\n        }\n      });\n    } else {\n      this.campaignService.scheduleCampaign(campaignData).subscribe({\n        next: () => {\n          alert(\"Campaign scheduled successfully!\");\n          this.router.navigate([\"/dashboard\"]);\n        },\n        error: error => {\n          console.error(\"Error scheduling campaign:\", error);\n          alert(\"Failed to schedule campaign. Please try again.\");\n        }\n      });\n    }\n  }\n  saveAsDraft() {\n    const campaignData = this.campaignForm.value;\n    this.campaignService.saveDraft(campaignData).subscribe({\n      next: () => {\n        alert(\"Campaign saved as draft!\");\n        this.router.navigate([\"/dashboard\"]);\n      },\n      error: error => {\n        console.error(\"Error saving draft:\", error);\n        alert(\"Failed to save draft. Please try again.\");\n      }\n    });\n  }\n  previewCampaign() {\n    alert(\"Preview functionality would open a modal with the email preview\");\n  }\n  sendTestEmail() {\n    alert(\"Test email would be sent to your address\");\n  }\n  navigateToDashboard() {\n    this.router.navigate([\"/dashboard\"]);\n  }\n};\nCampaignFormComponent = __decorate([Component({\n  selector: \"app-campaign-form\",\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n  template: `\n    <div class=\"p-6 bg-gray-50 min-h-screen\">\n      <div class=\"mb-6 flex items-center justify-between\">\n        <div>\n          <h1 class=\"text-2xl font-bold text-gray-900\">Create New Campaign</h1>\n          <p class=\"text-gray-500 mt-1\">Create and send a new email campaign to your subscribers</p>\n        </div>\n        <div class=\"flex gap-3\">\n          <button \n            type=\"button\" \n            class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            (click)=\"navigateToDashboard()\"\n          >\n            Cancel\n          </button>\n          <button \n            type=\"button\" \n            class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n            (click)=\"saveAsDraft()\"\n          >\n            Save as Draft\n          </button>\n        </div>\n      </div>\n\n      <div class=\"bg-white rounded-lg shadow-sm\">\n        <div class=\"p-6 border-b border-gray-200\">\n          <h2 class=\"text-lg font-medium\">Campaign Details</h2>\n        </div>\n\n        <form [formGroup]=\"campaignForm\" (ngSubmit)=\"onSubmit()\" class=\"p-6\">\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <!-- Campaign Name -->\n            <div class=\"col-span-2\">\n              <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-1\">Campaign Name</label>\n              <input \n                type=\"text\" \n                id=\"name\" \n                formControlName=\"name\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. Monthly Newsletter, Product Launch\"\n              >\n              <div *ngIf=\"submitted && f['name'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['name'].errors['required']\">Campaign name is required</div>\n              </div>\n            </div>\n\n            <!-- Subject Line -->\n            <div class=\"col-span-2\">\n              <label for=\"subject\" class=\"block text-sm font-medium text-gray-700 mb-1\">Subject Line</label>\n              <input \n                type=\"text\" \n                id=\"subject\" \n                formControlName=\"subject\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. Don't miss our summer sale!\"\n              >\n              <div *ngIf=\"submitted && f['subject'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['subject'].errors['required']\">Subject line is required</div>\n              </div>\n              <div class=\"mt-1 text-xs text-gray-500\">\n                A compelling subject line can improve open rates by up to 35%\n              </div>\n            </div>\n\n            <!-- Sender Name -->\n            <div>\n              <label for=\"senderName\" class=\"block text-sm font-medium text-gray-700 mb-1\">Sender Name</label>\n              <input \n                type=\"text\" \n                id=\"senderName\" \n                formControlName=\"senderName\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. Good Mail Team\"\n              >\n              <div *ngIf=\"submitted && f['senderName'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['senderName'].errors['required']\">Sender name is required</div>\n              </div>\n            </div>\n\n            <!-- Sender Email -->\n            <div>\n              <label for=\"senderEmail\" class=\"block text-sm font-medium text-gray-700 mb-1\">Sender Email</label>\n              <input \n                type=\"email\" \n                id=\"senderEmail\" \n                formControlName=\"senderEmail\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. team@goodmail.io\"\n              >\n              <div *ngIf=\"submitted && f['senderEmail'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['senderEmail'].errors['required']\">Sender email is required</div>\n                <div *ngIf=\"f['senderEmail'].errors['email']\">Please enter a valid email address</div>\n              </div>\n            </div>\n\n            <!-- Reply-To Email -->\n            <div>\n              <label for=\"replyToEmail\" class=\"block text-sm font-medium text-gray-700 mb-1\">Reply-To Email</label>\n              <input \n                type=\"email\" \n                id=\"replyToEmail\" \n                formControlName=\"replyToEmail\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. support@goodmail.io\"\n              >\n              <div *ngIf=\"submitted && f['replyToEmail'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['replyToEmail'].errors['email']\">Please enter a valid email address</div>\n              </div>\n            </div>\n\n            <!-- Campaign Type -->\n            <div>\n              <label for=\"campaignType\" class=\"block text-sm font-medium text-gray-700 mb-1\">Campaign Type</label>\n              <select \n                id=\"campaignType\" \n                formControlName=\"campaignType\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"regular\">Regular Campaign</option>\n                <option value=\"ab_test\">A/B Test</option>\n                <option value=\"automated\">Automated</option>\n                <option value=\"rss\">RSS Campaign</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6\">\n            <h3 class=\"text-lg font-medium mb-4\">Content</h3>\n            \n            <!-- Email Template -->\n            <div class=\"mb-6\">\n              <label for=\"template\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email Template</label>\n              <select \n                id=\"template\" \n                formControlName=\"template\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">Select a template</option>\n                <option value=\"blank\">Blank Template</option>\n                <option value=\"newsletter\">Newsletter</option>\n                <option value=\"product_announcement\">Product Announcement</option>\n                <option value=\"event_invitation\">Event Invitation</option>\n                <option value=\"welcome\">Welcome Email</option>\n              </select>\n            </div>\n\n            <!-- Email Content -->\n            <div class=\"mb-6\">\n              <label for=\"content\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email Content</label>\n              <div class=\"border border-gray-300 rounded-md overflow-hidden\">\n                <div class=\"bg-gray-50 border-b border-gray-300 px-3 py-2 flex items-center space-x-2\">\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <path d=\"M4 7V4h16v3\"></path>\n                      <path d=\"M9 20h6\"></path>\n                      <path d=\"M12 4v16\"></path>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <path d=\"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path>\n                      <path d=\"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n                      <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                      <line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line>\n                      <line x1=\"9\" y1=\"21\" x2=\"9\" y2=\"9\"></line>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n                      <line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\n                      <line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\n                      <line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line>\n                      <line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line>\n                      <line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>\n                    </svg>\n                  </button>\n                </div>\n                <textarea \n                  id=\"content\" \n                  formControlName=\"content\"\n                  rows=\"10\"\n                  class=\"w-full px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Write your email content here or use the template editor...\"\n                ></textarea>\n              </div>\n              <div *ngIf=\"submitted && f['content'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['content'].errors['required']\">Email content is required</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6\">\n            <h3 class=\"text-lg font-medium mb-4\">Recipients</h3>\n            \n            <!-- Recipient List -->\n            <div class=\"mb-6\">\n              <label for=\"recipientList\" class=\"block text-sm font-medium text-gray-700 mb-1\">Recipient List</label>\n              <select \n                id=\"recipientList\" \n                formControlName=\"recipientList\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">Select a list</option>\n                <option value=\"all_subscribers\">All Subscribers (5,189)</option>\n                <option value=\"active_users\">Active Users (3,241)</option>\n                <option value=\"new_customers\">New Customers (842)</option>\n                <option value=\"newsletter\">Newsletter Subscribers (4,102)</option>\n              </select>\n              <div *ngIf=\"submitted && f['recipientList'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['recipientList'].errors['required']\">Recipient list is required</div>\n              </div>\n            </div>\n\n            <!-- Segment -->\n            <div class=\"mb-6\">\n              <div class=\"flex items-center justify-between mb-1\">\n                <label for=\"segment\" class=\"block text-sm font-medium text-gray-700\">Segment (Optional)</label>\n                <button type=\"button\" class=\"text-sm text-blue-600 hover:text-blue-800\">\n                  Create New Segment\n                </button>\n              </div>\n              <select \n                id=\"segment\" \n                formControlName=\"segment\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">No segment</option>\n                <option value=\"high_engagement\">High Engagement (1,245)</option>\n                <option value=\"recent_purchase\">Recent Purchase (567)</option>\n                <option value=\"cart_abandoners\">Cart Abandoners (328)</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6\">\n            <h3 class=\"text-lg font-medium mb-4\">Schedule</h3>\n            \n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <!-- Send Time -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">When to send</label>\n                <div class=\"space-y-2\">\n                  <div class=\"flex items-center\">\n                    <input \n                      type=\"radio\" \n                      id=\"sendNow\" \n                      value=\"now\" \n                      formControlName=\"sendTime\"\n                      class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\n                    >\n                    <label for=\"sendNow\" class=\"ml-2 block text-sm text-gray-700\">\n                      Send immediately\n                    </label>\n                  </div>\n                  <div class=\"flex items-center\">\n                    <input \n                      type=\"radio\" \n                      id=\"sendLater\" \n                      value=\"scheduled\" \n                      formControlName=\"sendTime\"\n                      class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\n                    >\n                    <label for=\"sendLater\" class=\"ml-2 block text-sm text-gray-700\">\n                      Schedule for later\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Schedule Date/Time -->\n              <div *ngIf=\"f['sendTime'].value === 'scheduled'\">\n                <div class=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label for=\"scheduleDate\" class=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                    <input \n                      type=\"date\" \n                      id=\"scheduleDate\" \n                      formControlName=\"scheduleDate\"\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                    <div *ngIf=\"submitted && f['sendTime'].value === 'scheduled' && f['scheduleDate'].errors\" class=\"mt-1 text-sm text-red-500\">\n                      <div *ngIf=\"f['scheduleDate'].errors['required']\">Date is required</div>\n                    </div>\n                  </div>\n                  <div>\n                    <label for=\"scheduleTime\" class=\"block text-sm font-medium text-gray-700 mb-1\">Time</label>\n                    <input \n                      type=\"time\" \n                      id=\"scheduleTime\" \n                      formControlName=\"scheduleTime\"\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                    <div *ngIf=\"submitted && f['sendTime'].value === 'scheduled' && f['scheduleTime'].errors\" class=\"mt-1 text-sm text-red-500\">\n                      <div *ngIf=\"f['scheduleTime'].errors['required']\">Time is required</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Time Zone -->\n            <div class=\"mt-4\" *ngIf=\"f['sendTime'].value === 'scheduled'\">\n              <label for=\"timezone\" class=\"block text-sm font-medium text-gray-700 mb-1\">Time Zone</label>\n              <select \n                id=\"timezone\" \n                formControlName=\"timezone\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"UTC\">UTC</option>\n                <option value=\"America/New_York\">Eastern Time (ET)</option>\n                <option value=\"America/Chicago\">Central Time (CT)</option>\n                <option value=\"America/Denver\">Mountain Time (MT)</option>\n                <option value=\"America/Los_Angeles\">Pacific Time (PT)</option>\n                <option value=\"Europe/London\">London (GMT)</option>\n                <option value=\"Europe/Paris\">Paris (CET)</option>\n                <option value=\"Asia/Tokyo\">Tokyo (JST)</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6 flex justify-between\">\n            <div>\n              <button \n                type=\"button\" \n                class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 mr-3\"\n                (click)=\"previewCampaign()\"\n              >\n                Preview\n              </button>\n              <button \n                type=\"button\" \n                class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                (click)=\"sendTestEmail()\"\n              >\n                Send Test\n              </button>\n            </div>\n            <div>\n              <button \n                type=\"button\" \n                class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 mr-3\"\n                (click)=\"navigateToDashboard()\"\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                {{ f['sendTime'].value === 'now' ? 'Send Campaign' : 'Schedule Campaign' }}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  `\n})], CampaignFormComponent);\nexport { CampaignFormComponent };","map":{"version":3,"names":["Component","CommonModule","ReactiveFormsModule","Validators","RouterModule","CampaignFormComponent","constructor","formBuilder","router","campaignService","submitted","ngOnInit","campaignForm","group","name","required","subject","senderName","senderEmail","email","replyToEmail","campaignType","template","content","recipientList","segment","sendTime","scheduleDate","scheduleTime","timezone","get","valueChanges","subscribe","value","scheduleDateControl","scheduleTimeControl","setValidators","clearValidators","updateValueAndValidity","f","controls","onSubmit","invalid","campaignData","sendCampaign","next","alert","navigate","error","console","scheduleCampaign","saveAsDraft","saveDraft","previewCampaign","sendTestEmail","navigateToDashboard","__decorate","selector","standalone","imports"],"sources":["C:\\Users\\foulm\\Downloads\\v12\\src\\app\\components\\campaign-form\\campaign-form.component.ts"],"sourcesContent":["import { Component, type OnInit } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { type FormBuilder, type FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\"\nimport { type Router, RouterModule } from \"@angular/router\"\nimport type { CampaignService } from \"../../services/campaign.service\"\n\n@Component({\n  selector: \"app-campaign-form\",\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n  template: `\n    <div class=\"p-6 bg-gray-50 min-h-screen\">\n      <div class=\"mb-6 flex items-center justify-between\">\n        <div>\n          <h1 class=\"text-2xl font-bold text-gray-900\">Create New Campaign</h1>\n          <p class=\"text-gray-500 mt-1\">Create and send a new email campaign to your subscribers</p>\n        </div>\n        <div class=\"flex gap-3\">\n          <button \n            type=\"button\" \n            class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            (click)=\"navigateToDashboard()\"\n          >\n            Cancel\n          </button>\n          <button \n            type=\"button\" \n            class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n            (click)=\"saveAsDraft()\"\n          >\n            Save as Draft\n          </button>\n        </div>\n      </div>\n\n      <div class=\"bg-white rounded-lg shadow-sm\">\n        <div class=\"p-6 border-b border-gray-200\">\n          <h2 class=\"text-lg font-medium\">Campaign Details</h2>\n        </div>\n\n        <form [formGroup]=\"campaignForm\" (ngSubmit)=\"onSubmit()\" class=\"p-6\">\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <!-- Campaign Name -->\n            <div class=\"col-span-2\">\n              <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-1\">Campaign Name</label>\n              <input \n                type=\"text\" \n                id=\"name\" \n                formControlName=\"name\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. Monthly Newsletter, Product Launch\"\n              >\n              <div *ngIf=\"submitted && f['name'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['name'].errors['required']\">Campaign name is required</div>\n              </div>\n            </div>\n\n            <!-- Subject Line -->\n            <div class=\"col-span-2\">\n              <label for=\"subject\" class=\"block text-sm font-medium text-gray-700 mb-1\">Subject Line</label>\n              <input \n                type=\"text\" \n                id=\"subject\" \n                formControlName=\"subject\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. Don't miss our summer sale!\"\n              >\n              <div *ngIf=\"submitted && f['subject'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['subject'].errors['required']\">Subject line is required</div>\n              </div>\n              <div class=\"mt-1 text-xs text-gray-500\">\n                A compelling subject line can improve open rates by up to 35%\n              </div>\n            </div>\n\n            <!-- Sender Name -->\n            <div>\n              <label for=\"senderName\" class=\"block text-sm font-medium text-gray-700 mb-1\">Sender Name</label>\n              <input \n                type=\"text\" \n                id=\"senderName\" \n                formControlName=\"senderName\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. Good Mail Team\"\n              >\n              <div *ngIf=\"submitted && f['senderName'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['senderName'].errors['required']\">Sender name is required</div>\n              </div>\n            </div>\n\n            <!-- Sender Email -->\n            <div>\n              <label for=\"senderEmail\" class=\"block text-sm font-medium text-gray-700 mb-1\">Sender Email</label>\n              <input \n                type=\"email\" \n                id=\"senderEmail\" \n                formControlName=\"senderEmail\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. team@goodmail.io\"\n              >\n              <div *ngIf=\"submitted && f['senderEmail'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['senderEmail'].errors['required']\">Sender email is required</div>\n                <div *ngIf=\"f['senderEmail'].errors['email']\">Please enter a valid email address</div>\n              </div>\n            </div>\n\n            <!-- Reply-To Email -->\n            <div>\n              <label for=\"replyToEmail\" class=\"block text-sm font-medium text-gray-700 mb-1\">Reply-To Email</label>\n              <input \n                type=\"email\" \n                id=\"replyToEmail\" \n                formControlName=\"replyToEmail\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g. support@goodmail.io\"\n              >\n              <div *ngIf=\"submitted && f['replyToEmail'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['replyToEmail'].errors['email']\">Please enter a valid email address</div>\n              </div>\n            </div>\n\n            <!-- Campaign Type -->\n            <div>\n              <label for=\"campaignType\" class=\"block text-sm font-medium text-gray-700 mb-1\">Campaign Type</label>\n              <select \n                id=\"campaignType\" \n                formControlName=\"campaignType\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"regular\">Regular Campaign</option>\n                <option value=\"ab_test\">A/B Test</option>\n                <option value=\"automated\">Automated</option>\n                <option value=\"rss\">RSS Campaign</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6\">\n            <h3 class=\"text-lg font-medium mb-4\">Content</h3>\n            \n            <!-- Email Template -->\n            <div class=\"mb-6\">\n              <label for=\"template\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email Template</label>\n              <select \n                id=\"template\" \n                formControlName=\"template\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">Select a template</option>\n                <option value=\"blank\">Blank Template</option>\n                <option value=\"newsletter\">Newsletter</option>\n                <option value=\"product_announcement\">Product Announcement</option>\n                <option value=\"event_invitation\">Event Invitation</option>\n                <option value=\"welcome\">Welcome Email</option>\n              </select>\n            </div>\n\n            <!-- Email Content -->\n            <div class=\"mb-6\">\n              <label for=\"content\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email Content</label>\n              <div class=\"border border-gray-300 rounded-md overflow-hidden\">\n                <div class=\"bg-gray-50 border-b border-gray-300 px-3 py-2 flex items-center space-x-2\">\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <path d=\"M4 7V4h16v3\"></path>\n                      <path d=\"M9 20h6\"></path>\n                      <path d=\"M12 4v16\"></path>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <path d=\"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path>\n                      <path d=\"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"></path>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n                      <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                      <line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line>\n                      <line x1=\"9\" y1=\"21\" x2=\"9\" y2=\"9\"></line>\n                    </svg>\n                  </button>\n                  <button type=\"button\" class=\"p-1 text-gray-500 hover:text-gray-700\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"w-4 h-4\">\n                      <line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n                      <line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\n                      <line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\n                      <line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line>\n                      <line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line>\n                      <line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>\n                    </svg>\n                  </button>\n                </div>\n                <textarea \n                  id=\"content\" \n                  formControlName=\"content\"\n                  rows=\"10\"\n                  class=\"w-full px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Write your email content here or use the template editor...\"\n                ></textarea>\n              </div>\n              <div *ngIf=\"submitted && f['content'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['content'].errors['required']\">Email content is required</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6\">\n            <h3 class=\"text-lg font-medium mb-4\">Recipients</h3>\n            \n            <!-- Recipient List -->\n            <div class=\"mb-6\">\n              <label for=\"recipientList\" class=\"block text-sm font-medium text-gray-700 mb-1\">Recipient List</label>\n              <select \n                id=\"recipientList\" \n                formControlName=\"recipientList\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">Select a list</option>\n                <option value=\"all_subscribers\">All Subscribers (5,189)</option>\n                <option value=\"active_users\">Active Users (3,241)</option>\n                <option value=\"new_customers\">New Customers (842)</option>\n                <option value=\"newsletter\">Newsletter Subscribers (4,102)</option>\n              </select>\n              <div *ngIf=\"submitted && f['recipientList'].errors\" class=\"mt-1 text-sm text-red-500\">\n                <div *ngIf=\"f['recipientList'].errors['required']\">Recipient list is required</div>\n              </div>\n            </div>\n\n            <!-- Segment -->\n            <div class=\"mb-6\">\n              <div class=\"flex items-center justify-between mb-1\">\n                <label for=\"segment\" class=\"block text-sm font-medium text-gray-700\">Segment (Optional)</label>\n                <button type=\"button\" class=\"text-sm text-blue-600 hover:text-blue-800\">\n                  Create New Segment\n                </button>\n              </div>\n              <select \n                id=\"segment\" \n                formControlName=\"segment\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">No segment</option>\n                <option value=\"high_engagement\">High Engagement (1,245)</option>\n                <option value=\"recent_purchase\">Recent Purchase (567)</option>\n                <option value=\"cart_abandoners\">Cart Abandoners (328)</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6\">\n            <h3 class=\"text-lg font-medium mb-4\">Schedule</h3>\n            \n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <!-- Send Time -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">When to send</label>\n                <div class=\"space-y-2\">\n                  <div class=\"flex items-center\">\n                    <input \n                      type=\"radio\" \n                      id=\"sendNow\" \n                      value=\"now\" \n                      formControlName=\"sendTime\"\n                      class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\n                    >\n                    <label for=\"sendNow\" class=\"ml-2 block text-sm text-gray-700\">\n                      Send immediately\n                    </label>\n                  </div>\n                  <div class=\"flex items-center\">\n                    <input \n                      type=\"radio\" \n                      id=\"sendLater\" \n                      value=\"scheduled\" \n                      formControlName=\"sendTime\"\n                      class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\n                    >\n                    <label for=\"sendLater\" class=\"ml-2 block text-sm text-gray-700\">\n                      Schedule for later\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Schedule Date/Time -->\n              <div *ngIf=\"f['sendTime'].value === 'scheduled'\">\n                <div class=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label for=\"scheduleDate\" class=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n                    <input \n                      type=\"date\" \n                      id=\"scheduleDate\" \n                      formControlName=\"scheduleDate\"\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                    <div *ngIf=\"submitted && f['sendTime'].value === 'scheduled' && f['scheduleDate'].errors\" class=\"mt-1 text-sm text-red-500\">\n                      <div *ngIf=\"f['scheduleDate'].errors['required']\">Date is required</div>\n                    </div>\n                  </div>\n                  <div>\n                    <label for=\"scheduleTime\" class=\"block text-sm font-medium text-gray-700 mb-1\">Time</label>\n                    <input \n                      type=\"time\" \n                      id=\"scheduleTime\" \n                      formControlName=\"scheduleTime\"\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                    <div *ngIf=\"submitted && f['sendTime'].value === 'scheduled' && f['scheduleTime'].errors\" class=\"mt-1 text-sm text-red-500\">\n                      <div *ngIf=\"f['scheduleTime'].errors['required']\">Time is required</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Time Zone -->\n            <div class=\"mt-4\" *ngIf=\"f['sendTime'].value === 'scheduled'\">\n              <label for=\"timezone\" class=\"block text-sm font-medium text-gray-700 mb-1\">Time Zone</label>\n              <select \n                id=\"timezone\" \n                formControlName=\"timezone\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"UTC\">UTC</option>\n                <option value=\"America/New_York\">Eastern Time (ET)</option>\n                <option value=\"America/Chicago\">Central Time (CT)</option>\n                <option value=\"America/Denver\">Mountain Time (MT)</option>\n                <option value=\"America/Los_Angeles\">Pacific Time (PT)</option>\n                <option value=\"Europe/London\">London (GMT)</option>\n                <option value=\"Europe/Paris\">Paris (CET)</option>\n                <option value=\"Asia/Tokyo\">Tokyo (JST)</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"mt-8 border-t border-gray-200 pt-6 flex justify-between\">\n            <div>\n              <button \n                type=\"button\" \n                class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 mr-3\"\n                (click)=\"previewCampaign()\"\n              >\n                Preview\n              </button>\n              <button \n                type=\"button\" \n                class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                (click)=\"sendTestEmail()\"\n              >\n                Send Test\n              </button>\n            </div>\n            <div>\n              <button \n                type=\"button\" \n                class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 mr-3\"\n                (click)=\"navigateToDashboard()\"\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                {{ f['sendTime'].value === 'now' ? 'Send Campaign' : 'Schedule Campaign' }}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  `,\n})\nexport class CampaignFormComponent implements OnInit {\n  campaignForm!: FormGroup\n  submitted = false\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private campaignService: CampaignService,\n  ) {}\n\n  ngOnInit(): void {\n    this.campaignForm = this.formBuilder.group({\n      name: [\"\", Validators.required],\n      subject: [\"\", Validators.required],\n      senderName: [\"Good Mail Team\", Validators.required],\n      senderEmail: [\"team@goodmail.io\", [Validators.required, Validators.email]],\n      replyToEmail: [\"support@goodmail.io\", Validators.email],\n      campaignType: [\"regular\"],\n      template: [\"\"],\n      content: [\"\", Validators.required],\n      recipientList: [\"\", Validators.required],\n      segment: [\"\"],\n      sendTime: [\"now\"],\n      scheduleDate: [\"\"],\n      scheduleTime: [\"\"],\n      timezone: [\"UTC\"],\n    })\n\n    // Add conditional validation for scheduled sending\n    this.campaignForm.get(\"sendTime\")?.valueChanges.subscribe((value) => {\n      const scheduleDateControl = this.campaignForm.get(\"scheduleDate\")\n      const scheduleTimeControl = this.campaignForm.get(\"scheduleTime\")\n\n      if (value === \"scheduled\") {\n        scheduleDateControl?.setValidators(Validators.required)\n        scheduleTimeControl?.setValidators(Validators.required)\n      } else {\n        scheduleDateControl?.clearValidators()\n        scheduleTimeControl?.clearValidators()\n      }\n\n      scheduleDateControl?.updateValueAndValidity()\n      scheduleTimeControl?.updateValueAndValidity()\n    })\n  }\n\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.campaignForm.controls\n  }\n\n  onSubmit(): void {\n    this.submitted = true\n\n    // Stop here if form is invalid\n    if (this.campaignForm.invalid) {\n      return\n    }\n\n    const campaignData = this.campaignForm.value\n\n    if (campaignData.sendTime === \"now\") {\n      this.campaignService.sendCampaign(campaignData).subscribe({\n        next: () => {\n          alert(\"Campaign sent successfully!\")\n          this.router.navigate([\"/dashboard\"])\n        },\n        error: (error) => {\n          console.error(\"Error sending campaign:\", error)\n          alert(\"Failed to send campaign. Please try again.\")\n        },\n      })\n    } else {\n      this.campaignService.scheduleCampaign(campaignData).subscribe({\n        next: () => {\n          alert(\"Campaign scheduled successfully!\")\n          this.router.navigate([\"/dashboard\"])\n        },\n        error: (error) => {\n          console.error(\"Error scheduling campaign:\", error)\n          alert(\"Failed to schedule campaign. Please try again.\")\n        },\n      })\n    }\n  }\n\n  saveAsDraft(): void {\n    const campaignData = this.campaignForm.value\n\n    this.campaignService.saveDraft(campaignData).subscribe({\n      next: () => {\n        alert(\"Campaign saved as draft!\")\n        this.router.navigate([\"/dashboard\"])\n      },\n      error: (error) => {\n        console.error(\"Error saving draft:\", error)\n        alert(\"Failed to save draft. Please try again.\")\n      },\n    })\n  }\n\n  previewCampaign(): void {\n    alert(\"Preview functionality would open a modal with the email preview\")\n  }\n\n  sendTestEmail(): void {\n    alert(\"Test email would be sent to your address\")\n  }\n\n  navigateToDashboard(): void {\n    this.router.navigate([\"/dashboard\"])\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}