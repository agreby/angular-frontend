{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nlet ForgotPasswordComponent = class ForgotPasswordComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.error = \"\";\n    this.success = false;\n    this.email = \"\";\n  }\n  clearError() {\n    if (this.error) {\n      this.error = \"\";\n    }\n  }\n  onSubmit() {\n    this.isLoading = true;\n    this.error = \"\";\n    this.authService.forgotPassword(this.email).subscribe({\n      next: response => {\n        this.success = true;\n      },\n      error: error => {\n        this.error = \"Failed to send reset email. Please check your email address and try again.\";\n        this.isLoading = false;\n      },\n      complete: () => {\n        this.isLoading = false;\n      }\n    });\n  }\n  goToLogin() {\n    this.router.navigate([\"/login\"]);\n  }\n  tryAgain() {\n    this.success = false;\n    this.email = \"\";\n  }\n};\nForgotPasswordComponent = __decorate([Component({\n  selector: \"app-forgot-password\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n      <div class=\"w-full max-w-md\">\n        <!-- Success Message -->\n        <div *ngIf=\"success\" class=\"text-center\">\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4\">\n              <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-2xl font-bold text-gray-900 mb-2\">Check your email</h1>\n            <p class=\"text-gray-600 mb-6\">\n              We've sent a password reset link to <strong>{{ email }}</strong>\n            </p>\n            <div class=\"space-y-3\">\n              <button\n                (click)=\"goToLogin()\"\n                class=\"inline-flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors w-full\"\n              >\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\n                </svg>\n                Back to sign in\n              </button>\n              <button\n                (click)=\"tryAgain()\"\n                class=\"text-blue-600 hover:text-blue-800 font-medium text-sm\"\n              >\n                Didn't receive the email? Try again\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Reset Form -->\n        <div *ngIf=\"!success\">\n          <!-- Logo and Header -->\n          <div class=\"text-center mb-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n              <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Reset Password</h1>\n            <p class=\"text-gray-600\">Enter your email to receive a password reset link</p>\n          </div>\n\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <form (ngSubmit)=\"onSubmit()\" #resetForm=\"ngForm\" class=\"space-y-6\">\n              <!-- Error Message -->\n              <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-center gap-3\">\n                <svg class=\"w-5 h-5 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                <p class=\"text-red-700 text-sm\">{{ error }}</p>\n              </div>\n\n              <!-- Email Field -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    [(ngModel)]=\"email\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              </div>\n\n              <!-- Submit Button -->\n              <button\n                type=\"submit\"\n                [disabled]=\"isLoading\"\n                class=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                <div *ngIf=\"isLoading\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <span>{{ isLoading ? 'Sending reset link...' : 'Send reset link' }}</span>\n                <svg *ngIf=\"!isLoading\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path>\n                </svg>\n              </button>\n            </form>\n\n            <!-- Back to Login -->\n            <div class=\"mt-8 pt-6 border-t border-gray-200 text-center\">\n              <button\n                (click)=\"goToLogin()\"\n                class=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 font-medium text-sm\"\n              >\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\n                </svg>\n                Back to sign in\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: [\"./forgot-password.component.css\"]\n})], ForgotPasswordComponent);\nexport { ForgotPasswordComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","ForgotPasswordComponent","constructor","authService","router","isLoading","error","success","email","clearError","onSubmit","forgotPassword","subscribe","next","response","complete","goToLogin","navigate","tryAgain","__decorate","selector","standalone","imports","template","styleUrls"],"sources":["C:\\Users\\foulm\\Downloads\\v12\\src\\app\\components\\auth\\forgot-password\\forgot-password.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { FormsModule } from \"@angular/forms\"\nimport type { Router } from \"@angular/router\"\nimport type { AuthService } from \"../../../services/auth.service\"\n\n@Component({\n  selector: \"app-forgot-password\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n      <div class=\"w-full max-w-md\">\n        <!-- Success Message -->\n        <div *ngIf=\"success\" class=\"text-center\">\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4\">\n              <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-2xl font-bold text-gray-900 mb-2\">Check your email</h1>\n            <p class=\"text-gray-600 mb-6\">\n              We've sent a password reset link to <strong>{{ email }}</strong>\n            </p>\n            <div class=\"space-y-3\">\n              <button\n                (click)=\"goToLogin()\"\n                class=\"inline-flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors w-full\"\n              >\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\n                </svg>\n                Back to sign in\n              </button>\n              <button\n                (click)=\"tryAgain()\"\n                class=\"text-blue-600 hover:text-blue-800 font-medium text-sm\"\n              >\n                Didn't receive the email? Try again\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Reset Form -->\n        <div *ngIf=\"!success\">\n          <!-- Logo and Header -->\n          <div class=\"text-center mb-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n              <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Reset Password</h1>\n            <p class=\"text-gray-600\">Enter your email to receive a password reset link</p>\n          </div>\n\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <form (ngSubmit)=\"onSubmit()\" #resetForm=\"ngForm\" class=\"space-y-6\">\n              <!-- Error Message -->\n              <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-center gap-3\">\n                <svg class=\"w-5 h-5 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                <p class=\"text-red-700 text-sm\">{{ error }}</p>\n              </div>\n\n              <!-- Email Field -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    [(ngModel)]=\"email\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              </div>\n\n              <!-- Submit Button -->\n              <button\n                type=\"submit\"\n                [disabled]=\"isLoading\"\n                class=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                <div *ngIf=\"isLoading\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <span>{{ isLoading ? 'Sending reset link...' : 'Send reset link' }}</span>\n                <svg *ngIf=\"!isLoading\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path>\n                </svg>\n              </button>\n            </form>\n\n            <!-- Back to Login -->\n            <div class=\"mt-8 pt-6 border-t border-gray-200 text-center\">\n              <button\n                (click)=\"goToLogin()\"\n                class=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 font-medium text-sm\"\n              >\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\n                </svg>\n                Back to sign in\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: [\"./forgot-password.component.css\"],\n})\nexport class ForgotPasswordComponent {\n  isLoading = false\n  error = \"\"\n  success = false\n  email = \"\"\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  clearError(): void {\n    if (this.error) {\n      this.error = \"\"\n    }\n  }\n\n  onSubmit(): void {\n    this.isLoading = true\n    this.error = \"\"\n\n    this.authService.forgotPassword(this.email).subscribe({\n      next: (response) => {\n        this.success = true\n      },\n      error: (error) => {\n        this.error = \"Failed to send reset email. Please check your email address and try again.\"\n        this.isLoading = false\n      },\n      complete: () => {\n        this.isLoading = false\n      },\n    })\n  }\n\n  goToLogin(): void {\n    this.router.navigate([\"/login\"])\n  }\n\n  tryAgain(): void {\n    this.success = false\n    this.email = \"\"\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AA2HrC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAMlCC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,KAAK,GAAG,EAAE;EAKP;EAEHC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACH,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,GAAG,EAAE;;EAEnB;EAEAI,QAAQA,CAAA;IACN,IAAI,CAACL,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,KAAK,GAAG,EAAE;IAEf,IAAI,CAACH,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACH,KAAK,CAAC,CAACI,SAAS,CAAC;MACpDC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACP,OAAO,GAAG,IAAI;MACrB,CAAC;MACDD,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACA,KAAK,GAAG,4EAA4E;QACzF,IAAI,CAACD,SAAS,GAAG,KAAK;MACxB,CAAC;MACDU,QAAQ,EAAEA,CAAA,KAAK;QACb,IAAI,CAACV,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;EAEAW,SAASA,CAAA;IACP,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACX,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,KAAK,GAAG,EAAE;EACjB;CACD;AA3CYP,uBAAuB,GAAAkB,UAAA,EAvHnCrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,qBAAqB;EAC/BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACvB,YAAY,EAAEC,WAAW,CAAC;EACpCuB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgHT;EACDC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWvB,uBAAuB,CA2CnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}