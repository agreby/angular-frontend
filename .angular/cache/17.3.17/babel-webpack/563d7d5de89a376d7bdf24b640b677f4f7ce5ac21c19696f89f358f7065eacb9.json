{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nlet RegisterComponent = class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.showPassword = false;\n    this.showConfirmPassword = false;\n    this.isLoading = false;\n    this.error = \"\";\n    this.success = false;\n    this.formData = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      agreeToTerms: false\n    };\n  }\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n  toggleConfirmPassword() {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n  clearError() {\n    if (this.error) {\n      this.error = \"\";\n    }\n  }\n  validateForm() {\n    if (!this.formData.firstName.trim()) {\n      this.error = \"First name is required\";\n      return false;\n    }\n    if (!this.formData.lastName.trim()) {\n      this.error = \"Last name is required\";\n      return false;\n    }\n    if (!this.formData.email.trim()) {\n      this.error = \"Email is required\";\n      return false;\n    }\n    if (this.formData.password.length < 6) {\n      this.error = \"Password must be at least 6 characters\";\n      return false;\n    }\n    if (this.formData.password !== this.formData.confirmPassword) {\n      this.error = \"Passwords do not match\";\n      return false;\n    }\n    if (!this.formData.agreeToTerms) {\n      this.error = \"You must agree to the Terms of Service\";\n      return false;\n    }\n    return true;\n  }\n  onSubmit() {\n    if (!this.validateForm()) return;\n    this.isLoading = true;\n    this.error = \"\";\n    const registerRequest = {\n      username: this.formData.email,\n      email: this.formData.email,\n      password: this.formData.password,\n      firstName: this.formData.firstName,\n      lastName: this.formData.lastName\n    };\n    this.authService.register(registerRequest).subscribe({\n      next: response => {\n        this.success = true;\n      },\n      error: error => {\n        this.error = error.error?.message || \"Registration failed. Please try again.\";\n        this.isLoading = false;\n      },\n      complete: () => {\n        this.isLoading = false;\n      }\n    });\n  }\n  goToLogin() {\n    this.router.navigate([\"/login\"]);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: \"app-register\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n      <div class=\"w-full max-w-md\">\n        <!-- Success Message -->\n        <div *ngIf=\"success\" class=\"text-center\">\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4\">\n              <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-2xl font-bold text-gray-900 mb-2\">Account Created!</h1>\n            <p class=\"text-gray-600 mb-6\">\n              Your account has been successfully created. You can now sign in to access your dashboard.\n            </p>\n            <button\n              (click)=\"goToLogin()\"\n              class=\"inline-flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors w-full\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\n              </svg>\n              Sign in to your account\n            </button>\n          </div>\n        </div>\n\n        <!-- Registration Form -->\n        <div *ngIf=\"!success\">\n          <!-- Logo and Header -->\n          <div class=\"text-center mb-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n              <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Join Good Mail</h1>\n            <p class=\"text-gray-600\">Create your account to start managing email campaigns</p>\n          </div>\n\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <form (ngSubmit)=\"onSubmit()\" #registerForm=\"ngForm\" class=\"space-y-6\">\n              <!-- Error Message -->\n              <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-center gap-3\">\n                <svg class=\"w-5 h-5 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                <p class=\"text-red-700 text-sm\">{{ error }}</p>\n              </div>\n\n              <!-- Name Fields -->\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label for=\"firstName\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                    First Name\n                  </label>\n                  <div class=\"relative\">\n                    <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n                      </svg>\n                    </div>\n                    <input\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      type=\"text\"\n                      required\n                      [(ngModel)]=\"formData.firstName\"\n                      (input)=\"clearError()\"\n                      class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                      placeholder=\"John\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Last Name\n                  </label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    required\n                    [(ngModel)]=\"formData.lastName\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Doe\"\n                  />\n                </div>\n              </div>\n\n              <!-- Email Field -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    [(ngModel)]=\"formData.email\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"john@example.com\"\n                  />\n                </div>\n              </div>\n\n              <!-- Password Field -->\n              <div>\n                <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Password\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    [type]=\"showPassword ? 'text' : 'password'\"\n                    required\n                    [(ngModel)]=\"formData.password\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Create a strong password\"\n                  />\n                  <button\n                    type=\"button\"\n                    (click)=\"togglePassword()\"\n                    class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  >\n                    <svg *ngIf=\"!showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                    </svg>\n                    <svg *ngIf=\"showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Confirm Password Field -->\n              <div>\n                <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Confirm Password\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    [type]=\"showConfirmPassword ? 'text' : 'password'\"\n                    required\n                    [(ngModel)]=\"formData.confirmPassword\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Confirm your password\"\n                  />\n                  <button\n                    type=\"button\"\n                    (click)=\"toggleConfirmPassword()\"\n                    class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  >\n                    <svg *ngIf=\"!showConfirmPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                    </svg>\n                    <svg *ngIf=\"showConfirmPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Terms Agreement -->\n              <div class=\"flex items-start\">\n                <input\n                  id=\"agreeToTerms\"\n                  name=\"agreeToTerms\"\n                  type=\"checkbox\"\n                  [(ngModel)]=\"formData.agreeToTerms\"\n                  class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mt-1\"\n                />\n                <label for=\"agreeToTerms\" class=\"ml-3 block text-sm text-gray-700\">\n                  I agree to the\n                  <a href=\"/terms\" class=\"text-blue-600 hover:text-blue-800 font-medium\">Terms of Service</a>\n                  and\n                  <a href=\"/privacy\" class=\"text-blue-600 hover:text-blue-800 font-medium\">Privacy Policy</a>\n                </label>\n              </div>\n\n              <!-- Submit Button -->\n              <button\n                type=\"submit\"\n                [disabled]=\"isLoading\"\n                class=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                <div *ngIf=\"isLoading\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <span>{{ isLoading ? 'Creating account...' : 'Create account' }}</span>\n                <svg *ngIf=\"!isLoading\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path>\n                </svg>\n              </button>\n            </form>\n\n            <!-- Divider -->\n            <div class=\"mt-8 pt-6 border-t border-gray-200\">\n              <p class=\"text-center text-sm text-gray-600\">\n                Already have an account?\n                <a routerLink=\"/login\" class=\"text-blue-600 hover:text-blue-800 font-medium\">Sign in</a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: [\"./register.component.css\"]\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","RegisterComponent","constructor","authService","router","showPassword","showConfirmPassword","isLoading","error","success","formData","firstName","lastName","email","password","confirmPassword","agreeToTerms","togglePassword","toggleConfirmPassword","clearError","validateForm","trim","length","onSubmit","registerRequest","username","register","subscribe","next","response","message","complete","goToLogin","navigate","__decorate","selector","standalone","imports","template","styleUrls"],"sources":["C:\\Users\\foulm\\Downloads\\v12\\src\\app\\components\\auth\\register\\register.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { FormsModule } from \"@angular/forms\"\nimport type { Router } from \"@angular/router\"\nimport type { AuthService } from \"../../../services/auth.service\"\n\n@Component({\n  selector: \"app-register\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n      <div class=\"w-full max-w-md\">\n        <!-- Success Message -->\n        <div *ngIf=\"success\" class=\"text-center\">\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4\">\n              <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-2xl font-bold text-gray-900 mb-2\">Account Created!</h1>\n            <p class=\"text-gray-600 mb-6\">\n              Your account has been successfully created. You can now sign in to access your dashboard.\n            </p>\n            <button\n              (click)=\"goToLogin()\"\n              class=\"inline-flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors w-full\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16l-4-4m0 0l4-4m-4 4h18\"></path>\n              </svg>\n              Sign in to your account\n            </button>\n          </div>\n        </div>\n\n        <!-- Registration Form -->\n        <div *ngIf=\"!success\">\n          <!-- Logo and Header -->\n          <div class=\"text-center mb-8\">\n            <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n              <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n              </svg>\n            </div>\n            <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Join Good Mail</h1>\n            <p class=\"text-gray-600\">Create your account to start managing email campaigns</p>\n          </div>\n\n          <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n            <form (ngSubmit)=\"onSubmit()\" #registerForm=\"ngForm\" class=\"space-y-6\">\n              <!-- Error Message -->\n              <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-center gap-3\">\n                <svg class=\"w-5 h-5 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                <p class=\"text-red-700 text-sm\">{{ error }}</p>\n              </div>\n\n              <!-- Name Fields -->\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label for=\"firstName\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                    First Name\n                  </label>\n                  <div class=\"relative\">\n                    <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n                      </svg>\n                    </div>\n                    <input\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      type=\"text\"\n                      required\n                      [(ngModel)]=\"formData.firstName\"\n                      (input)=\"clearError()\"\n                      class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                      placeholder=\"John\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Last Name\n                  </label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    required\n                    [(ngModel)]=\"formData.lastName\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full px-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Doe\"\n                  />\n                </div>\n              </div>\n\n              <!-- Email Field -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    [(ngModel)]=\"formData.email\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"john@example.com\"\n                  />\n                </div>\n              </div>\n\n              <!-- Password Field -->\n              <div>\n                <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Password\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    [type]=\"showPassword ? 'text' : 'password'\"\n                    required\n                    [(ngModel)]=\"formData.password\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Create a strong password\"\n                  />\n                  <button\n                    type=\"button\"\n                    (click)=\"togglePassword()\"\n                    class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  >\n                    <svg *ngIf=\"!showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                    </svg>\n                    <svg *ngIf=\"showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Confirm Password Field -->\n              <div>\n                <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Confirm Password\n                </label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    [type]=\"showConfirmPassword ? 'text' : 'password'\"\n                    required\n                    [(ngModel)]=\"formData.confirmPassword\"\n                    (input)=\"clearError()\"\n                    class=\"block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    placeholder=\"Confirm your password\"\n                  />\n                  <button\n                    type=\"button\"\n                    (click)=\"toggleConfirmPassword()\"\n                    class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  >\n                    <svg *ngIf=\"!showConfirmPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                    </svg>\n                    <svg *ngIf=\"showConfirmPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Terms Agreement -->\n              <div class=\"flex items-start\">\n                <input\n                  id=\"agreeToTerms\"\n                  name=\"agreeToTerms\"\n                  type=\"checkbox\"\n                  [(ngModel)]=\"formData.agreeToTerms\"\n                  class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mt-1\"\n                />\n                <label for=\"agreeToTerms\" class=\"ml-3 block text-sm text-gray-700\">\n                  I agree to the\n                  <a href=\"/terms\" class=\"text-blue-600 hover:text-blue-800 font-medium\">Terms of Service</a>\n                  and\n                  <a href=\"/privacy\" class=\"text-blue-600 hover:text-blue-800 font-medium\">Privacy Policy</a>\n                </label>\n              </div>\n\n              <!-- Submit Button -->\n              <button\n                type=\"submit\"\n                [disabled]=\"isLoading\"\n                class=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                <div *ngIf=\"isLoading\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <span>{{ isLoading ? 'Creating account...' : 'Create account' }}</span>\n                <svg *ngIf=\"!isLoading\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path>\n                </svg>\n              </button>\n            </form>\n\n            <!-- Divider -->\n            <div class=\"mt-8 pt-6 border-t border-gray-200\">\n              <p class=\"text-center text-sm text-gray-600\">\n                Already have an account?\n                <a routerLink=\"/login\" class=\"text-blue-600 hover:text-blue-800 font-medium\">Sign in</a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: [\"./register.component.css\"],\n})\nexport class RegisterComponent {\n  showPassword = false\n  showConfirmPassword = false\n  isLoading = false\n  error = \"\"\n  success = false\n\n  formData = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    agreeToTerms: false,\n  }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  togglePassword(): void {\n    this.showPassword = !this.showPassword\n  }\n\n  toggleConfirmPassword(): void {\n    this.showConfirmPassword = !this.showConfirmPassword\n  }\n\n  clearError(): void {\n    if (this.error) {\n      this.error = \"\"\n    }\n  }\n\n  validateForm(): boolean {\n    if (!this.formData.firstName.trim()) {\n      this.error = \"First name is required\"\n      return false\n    }\n    if (!this.formData.lastName.trim()) {\n      this.error = \"Last name is required\"\n      return false\n    }\n    if (!this.formData.email.trim()) {\n      this.error = \"Email is required\"\n      return false\n    }\n    if (this.formData.password.length < 6) {\n      this.error = \"Password must be at least 6 characters\"\n      return false\n    }\n    if (this.formData.password !== this.formData.confirmPassword) {\n      this.error = \"Passwords do not match\"\n      return false\n    }\n    if (!this.formData.agreeToTerms) {\n      this.error = \"You must agree to the Terms of Service\"\n      return false\n    }\n    return true\n  }\n\n  onSubmit(): void {\n    if (!this.validateForm()) return\n\n    this.isLoading = true\n    this.error = \"\"\n\n    const registerRequest = {\n      username: this.formData.email,\n      email: this.formData.email,\n      password: this.formData.password,\n      firstName: this.formData.firstName,\n      lastName: this.formData.lastName,\n    }\n\n    this.authService.register(registerRequest).subscribe({\n      next: (response) => {\n        this.success = true\n      },\n      error: (error) => {\n        this.error = error.error?.message || \"Registration failed. Please try again.\"\n        this.isLoading = false\n      },\n      complete: () => {\n        this.isLoading = false\n      },\n    })\n  }\n\n  goToLogin(): void {\n    this.router.navigate([\"/login\"])\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}