{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.showPassword = false;\n    this.isLoading = false;\n    this.error = \"\";\n    this.formData = {\n      email: \"\",\n      password: \"\",\n      rememberMe: false\n    };\n  }\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n  clearError() {\n    if (this.error) {\n      this.error = \"\";\n    }\n  }\n  onSubmit() {\n    this.isLoading = true;\n    this.error = \"\";\n    const loginRequest = {\n      username: this.formData.email,\n      password: this.formData.password\n    };\n    this.authService.login(loginRequest).subscribe({\n      next: response => {\n        this.router.navigate([\"/dashboard\"]);\n      },\n      error: error => {\n        this.error = \"Invalid email or password. Please try again.\";\n        this.isLoading = false;\n      },\n      complete: () => {\n        this.isLoading = false;\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: \"app-login\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n      <div class=\"w-full max-w-md\">\n        <!-- Logo and Header -->\n        <div class=\"text-center mb-8\">\n          <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n            <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n            </svg>\n          </div>\n          <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Good Mail</h1>\n          <p class=\"text-gray-600\">Sign in to your email campaign dashboard</p>\n        </div>\n\n        <!-- Login Form -->\n        <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n          <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\" class=\"space-y-6\">\n            <!-- Error Message -->\n            <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-center gap-3\">\n              <svg class=\"w-5 h-5 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <p class=\"text-red-700 text-sm\">{{ error }}</p>\n            </div>\n\n            <!-- Email Field -->\n            <div>\n              <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email Address\n              </label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                  </svg>\n                </div>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  required\n                  [(ngModel)]=\"formData.email\"\n                  (input)=\"clearError()\"\n                  class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                  placeholder=\"Enter your email\"\n                />\n              </div>\n            </div>\n\n            <!-- Password Field -->\n            <div>\n              <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                  </svg>\n                </div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  [type]=\"showPassword ? 'text' : 'password'\"\n                  required\n                  [(ngModel)]=\"formData.password\"\n                  (input)=\"clearError()\"\n                  class=\"block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                  placeholder=\"Enter your password\"\n                />\n                <button\n                  type=\"button\"\n                  (click)=\"togglePassword()\"\n                  class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                >\n                  <svg *ngIf=\"!showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                  </svg>\n                  <svg *ngIf=\"showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            <!-- Remember Me & Forgot Password -->\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center\">\n                <input\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  type=\"checkbox\"\n                  [(ngModel)]=\"formData.rememberMe\"\n                  class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n                <label for=\"rememberMe\" class=\"ml-2 block text-sm text-gray-700\">\n                  Remember me\n                </label>\n              </div>\n              <a routerLink=\"/forgot-password\" class=\"text-sm text-blue-600 hover:text-blue-800 font-medium\">\n                Forgot password?\n              </a>\n            </div>\n\n            <!-- Submit Button -->\n            <button\n              type=\"submit\"\n              [disabled]=\"isLoading\"\n              class=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <div *ngIf=\"isLoading\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              <span>{{ isLoading ? 'Signing in...' : 'Sign in' }}</span>\n              <svg *ngIf=\"!isLoading\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path>\n              </svg>\n            </button>\n          </form>\n\n          <!-- Divider -->\n          <div class=\"mt-8 pt-6 border-t border-gray-200\">\n            <p class=\"text-center text-sm text-gray-600\">\n              Don't have an account?\n              <a routerLink=\"/register\" class=\"text-blue-600 hover:text-blue-800 font-medium\">\n                Sign up for free\n              </a>\n            </p>\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"mt-8 text-center\">\n          <p class=\"text-xs text-gray-500\">\n            By signing in, you agree to our\n            <a href=\"/terms\" class=\"text-blue-600 hover:text-blue-800\">Terms of Service</a>\n            and\n            <a href=\"/privacy\" class=\"text-blue-600 hover:text-blue-800\">Privacy Policy</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: [\"./login.component.css\"]\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","LoginComponent","constructor","authService","router","showPassword","isLoading","error","formData","email","password","rememberMe","togglePassword","clearError","onSubmit","loginRequest","username","login","subscribe","next","response","navigate","complete","__decorate","selector","standalone","imports","template","styleUrls"],"sources":["C:\\Users\\foulm\\Downloads\\v12\\src\\app\\components\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { FormsModule } from \"@angular/forms\"\nimport type { Router } from \"@angular/router\"\nimport type { AuthService } from \"../../../services/auth.service\"\n\n@Component({\n  selector: \"app-login\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n      <div class=\"w-full max-w-md\">\n        <!-- Logo and Header -->\n        <div class=\"text-center mb-8\">\n          <div class=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n            <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n            </svg>\n          </div>\n          <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Good Mail</h1>\n          <p class=\"text-gray-600\">Sign in to your email campaign dashboard</p>\n        </div>\n\n        <!-- Login Form -->\n        <div class=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\">\n          <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\" class=\"space-y-6\">\n            <!-- Error Message -->\n            <div *ngIf=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-center gap-3\">\n              <svg class=\"w-5 h-5 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <p class=\"text-red-700 text-sm\">{{ error }}</p>\n            </div>\n\n            <!-- Email Field -->\n            <div>\n              <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email Address\n              </label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                  </svg>\n                </div>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  required\n                  [(ngModel)]=\"formData.email\"\n                  (input)=\"clearError()\"\n                  class=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                  placeholder=\"Enter your email\"\n                />\n              </div>\n            </div>\n\n            <!-- Password Field -->\n            <div>\n              <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n                  </svg>\n                </div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  [type]=\"showPassword ? 'text' : 'password'\"\n                  required\n                  [(ngModel)]=\"formData.password\"\n                  (input)=\"clearError()\"\n                  class=\"block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                  placeholder=\"Enter your password\"\n                />\n                <button\n                  type=\"button\"\n                  (click)=\"togglePassword()\"\n                  class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                >\n                  <svg *ngIf=\"!showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                  </svg>\n                  <svg *ngIf=\"showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            <!-- Remember Me & Forgot Password -->\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center\">\n                <input\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  type=\"checkbox\"\n                  [(ngModel)]=\"formData.rememberMe\"\n                  class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n                <label for=\"rememberMe\" class=\"ml-2 block text-sm text-gray-700\">\n                  Remember me\n                </label>\n              </div>\n              <a routerLink=\"/forgot-password\" class=\"text-sm text-blue-600 hover:text-blue-800 font-medium\">\n                Forgot password?\n              </a>\n            </div>\n\n            <!-- Submit Button -->\n            <button\n              type=\"submit\"\n              [disabled]=\"isLoading\"\n              class=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <div *ngIf=\"isLoading\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              <span>{{ isLoading ? 'Signing in...' : 'Sign in' }}</span>\n              <svg *ngIf=\"!isLoading\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path>\n              </svg>\n            </button>\n          </form>\n\n          <!-- Divider -->\n          <div class=\"mt-8 pt-6 border-t border-gray-200\">\n            <p class=\"text-center text-sm text-gray-600\">\n              Don't have an account?\n              <a routerLink=\"/register\" class=\"text-blue-600 hover:text-blue-800 font-medium\">\n                Sign up for free\n              </a>\n            </p>\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"mt-8 text-center\">\n          <p class=\"text-xs text-gray-500\">\n            By signing in, you agree to our\n            <a href=\"/terms\" class=\"text-blue-600 hover:text-blue-800\">Terms of Service</a>\n            and\n            <a href=\"/privacy\" class=\"text-blue-600 hover:text-blue-800\">Privacy Policy</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent {\n  showPassword = false\n  isLoading = false\n  error = \"\"\n\n  formData = {\n    email: \"\",\n    password: \"\",\n    rememberMe: false,\n  }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  togglePassword(): void {\n    this.showPassword = !this.showPassword\n  }\n\n  clearError(): void {\n    if (this.error) {\n      this.error = \"\"\n    }\n  }\n\n  onSubmit(): void {\n    this.isLoading = true\n    this.error = \"\"\n\n    const loginRequest = {\n      username: this.formData.email,\n      password: this.formData.password,\n    }\n\n    this.authService.login(loginRequest).subscribe({\n      next: (response) => {\n        this.router.navigate([\"/dashboard\"])\n      },\n      error: (error) => {\n        this.error = \"Invalid email or password. Please try again.\"\n        this.isLoading = false\n      },\n      complete: () => {\n        this.isLoading = false\n      },\n    })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAwJrC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAWzBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IAZhB,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,KAAK,GAAG,EAAE;IAEV,KAAAC,QAAQ,GAAG;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;KACb;EAKE;EAEHC,cAAcA,CAAA;IACZ,IAAI,CAACP,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAQ,UAAUA,CAAA;IACR,IAAI,IAAI,CAACN,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,GAAG,EAAE;;EAEnB;EAEAO,QAAQA,CAAA;IACN,IAAI,CAACR,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,KAAK,GAAG,EAAE;IAEf,MAAMQ,YAAY,GAAG;MACnBC,QAAQ,EAAE,IAAI,CAACR,QAAQ,CAACC,KAAK;MAC7BC,QAAQ,EAAE,IAAI,CAACF,QAAQ,CAACE;KACzB;IAED,IAAI,CAACP,WAAW,CAACc,KAAK,CAACF,YAAY,CAAC,CAACG,SAAS,CAAC;MAC7CC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC;MACDd,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACA,KAAK,GAAG,8CAA8C;QAC3D,IAAI,CAACD,SAAS,GAAG,KAAK;MACxB,CAAC;MACDgB,QAAQ,EAAEA,CAAA,KAAK;QACb,IAAI,CAAChB,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;CACD;AAhDYL,cAAc,GAAAsB,UAAA,EApJ1BzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC3B,YAAY,EAAEC,WAAW,CAAC;EACpC2B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6IT;EACDC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW3B,cAAc,CAgD1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}